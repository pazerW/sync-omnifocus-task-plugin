import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from "fs";
import copyStaticFiles from "esbuild-copy-static-files";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;
const manifest = JSON.parse(fs.readFileSync("./manifest.json", "utf-8"));
const pluginId = manifest.id;
const devPluginPath = `/Volumes/file-1/00_视频工作/04_直播文件/.obsidian/plugins/${pluginId}`;
const buildPluginPath = `/Volumes/file-1/00_视频工作/04_直播文件/.obsidian/plugins/${pluginId}`;
// const buildPluginPath = `/Users/wang/Library/Mobile Documents/iCloud~md~obsidian/Documents/Base/.obsidian/plugins/${pluginId}`;

const prod = process.argv[2] === "production";

try {
	const context = await esbuild.context({
		banner: {
			js: banner,
		},
		entryPoints: ["main.ts"],
		bundle: true,
		external: [
			"obsidian",
			"electron",
			"@codemirror/autocomplete",
			"@codemirror/collab",
			"@codemirror/commands",
			"@codemirror/language",
			"@codemirror/lint",
			"@codemirror/search",
			"@codemirror/state",
			"@codemirror/view",
			"@lezer/common",
			"@lezer/highlight",
			"@lezer/lr",
			...builtins,
		],
		format: "cjs",
		target: "es2018",
		logLevel: "info",
		sourcemap: prod ? false : "inline",
		treeShaking: true,
		outfile: "./dist/main.js",
		minify: prod,
		plugins: [
			copyStaticFiles({
				src: "./manifest.json",
				dest: prod
					? `${buildPluginPath}/manifest.json`
					: `${devPluginPath}/manifest.json`,
			}),
			copyStaticFiles({
				src: "./dist/main.js",
				dest: prod
					? `${buildPluginPath}/main.js`
					: `${devPluginPath}/main.js`,
			}),
		],
	});

	if (prod) {
		await context.rebuild();
		process.exit(0);
	} else {
		await context.watch();
	}
} catch (err) {
	process.exit(1);
}
